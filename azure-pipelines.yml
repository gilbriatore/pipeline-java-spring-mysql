trigger:
  branches:
    include:
      - stages

stages:
  - stage: Build
    displayName: "Build Stage"
    jobs:
      - job: Build
        displayName: "Build Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'

          - script: |
              echo "Conteúdo após o build:"
              ls -R $(System.DefaultWorkingDirectory)

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/target'
              artifact: 'drop'

  - stage: Test
    displayName: "Test Stage"
    dependsOn: Build
    jobs:
      - job: Test
        displayName: "Test Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnFailedTests: true

  - stage: Deploy
    displayName: "Deploy Stage"
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: "Deploy Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'drop'
              path: '$(Pipeline.Workspace)/drop'

          - script: |
              echo "Conteúdo após download:"
              ls -R $(Pipeline.Workspace)/drop

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'DevOps_APPs'
              appName: 'devopspucpr'
              package: '$(Pipeline.Workspace)/drop/**/*.jar'