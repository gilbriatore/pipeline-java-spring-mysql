trigger:
  branches:
    include:
      - docker

variables:
  imageName: 'azspring-app'
  containerRegistry: 'myacrpucpr.azurecr.io'
  dockerTag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: "Build Stage"
    jobs:
      - job: Build
        displayName: "Build Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'

          - script: |
              echo "Construindo imagem Docker..."
              docker build -t $(containerRegistry)/$(imageName):$(dockerTag) .
            displayName: 'Docker Build'

          - task: Docker@2
            displayName: 'Push image to ACR'
            inputs:
              command: 'push'
              repository: '$(imageName)'
              tags: '$(dockerTag)'
              containerRegistry: 'MyACRServiceConnection'

  - stage: Test
    displayName: "Test Stage"
    dependsOn: Build
    jobs:
      - job: Test
        displayName: "Test Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - script: |
              echo "Realizando login no ACR..."
              echo $(ACR_PASSWORD) | docker login myacrpucpr.azurecr.io -u $(ACR_USERNAME) --password-stdin
              echo "Executando testes dentro do container..."
              docker run --rm $(containerRegistry)/$(imageName):$(dockerTag) mvn test
            displayName: 'Run Tests in Docker'

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnFailedTests: true

  - stage: Deploy
    displayName: "Deploy Stage"
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: "Deploy Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo "Deploying container image..."
              az webapp config container set \
                --name azspring \
                --resource-group myResourceGroup \
                --docker-custom-image-name $(containerRegistry)/$(imageName):$(dockerTag) \
                --docker-registry-server-url https://$(containerRegistry)
            displayName: 'Deploy to Azure Web App'
