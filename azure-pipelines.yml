trigger:
  branches:
    include:
      - docker

variables:
  imageName: 'azspring-app'
  containerRegistry: 'myacrpucpr.azurecr.io'
  dockerTag: '$(Build.BuildId)'

stages:
  - stage: Test
    displayName: "Test Stage"
    jobs:
      - job: Test
        displayName: "Test Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - script: |
              echo "Verificando Docker e Maven..."
              docker --version
              mvn -version
            displayName: 'Check Docker and Maven'

          - script: |
              echo "Executando testes com Testcontainers..."
              mvn verify
            displayName: 'Run Unit and Integration Tests'

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              failTaskOnFailedTests: true
  - stage: BuildAndPush
    displayName: "Build and Push Docker Image"
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: Build
        displayName: "Build and Push Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: Maven@4
            displayName: 'Package Application'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package -DskipTests'

          - script: |
              echo "Construindo imagem Docker..."
              docker build -t $(containerRegistry)/$(imageName):$(dockerTag) .
            displayName: 'Docker Build'

          - task: Docker@2
            displayName: 'Push image to ACR'
            inputs:
              command: 'push'
              repository: '$(imageName)'
              tags: '$(dockerTag)'
              containerRegistry: 'MyACRServiceConnection'

  - stage: Deploy
    displayName: "Deploy Stage"
    dependsOn: BuildAndPush
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: "Deploy Job"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Deploy to Azure Container App'
            inputs:
              azureSubscription: 'DevOps_APPs'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az containerapp update \
                  --name azspring \
                  --resource-group myResourceGroup \
                  --image $(containerRegistry)/$(imageName):$(dockerTag)

