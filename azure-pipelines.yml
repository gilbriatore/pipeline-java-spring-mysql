trigger:
  branches:
    include:
      - repository

pool:
  vmImage: 'ubuntu-latest'

variables:
  MYSQL_ROOT_PASS: '12345'
  SPRING_DB_NAME: 'spring'

steps:
  # ✅ Instalar MySQL
  - task: Bash@3
    displayName: 'Instalar MySQL Server'
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server

  # ✅ Alterar plugin de autenticação e definir senha para root
  - task: Bash@3
    displayName: 'Configurar root do MySQL'
    inputs:
      targetType: 'inline'
      script: |
        sudo systemctl start mysql
        echo "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${MYSQL_ROOT_PASS}'; FLUSH PRIVILEGES;" > alter_root.sql
        sudo mysql < alter_root.sql

  # ✅ Criar banco de dados spring
  - task: Bash@3
    displayName: 'Criar banco de dados spring'
    inputs:
      targetType: 'inline'
      script: |
        mysql -u root -p${MYSQL_ROOT_PASS} -e "CREATE DATABASE IF NOT EXISTS ${SPRING_DB_NAME};"

  # ✅ Testar conexão
  - task: Bash@3
    displayName: 'Testar conexão com banco spring'
    inputs:
      targetType: 'inline'
      script: |
        mysql -u root -p${MYSQL_ROOT_PASS} -e "SHOW DATABASES;"

  # ✅ Build com Maven
  - task: Maven@4
    displayName: 'Build com Maven'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'

  # ✅ Executar aplicação Spring Boot
  - task: Bash@3
    displayName: 'Executar aplicação Spring Boot'
    inputs:
      targetType: 'inline'
      script: |
        java -jar target/*.jar
