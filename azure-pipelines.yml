trigger:
  branches:
    include:
      - repository

pool:
  vmImage: 'ubuntu-latest'

variables:
  DB_USER: 'springuser'
  SPRING_DB_NAME: 'spring'
  # Atenção: DB_PASS deve ser definida como variável secreta no Azure DevOps

steps:
  # ✅ Instalar MySQL
  - task: Bash@3
    displayName: 'Instalar MySQL Server'
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server

  # ✅ Criar banco e usuário
  - task: Bash@3
    displayName: 'Criar banco e usuário'
    inputs:
      targetType: 'inline'
      script: |
        sudo systemctl start mysql
        sudo mysql -e "CREATE DATABASE IF NOT EXISTS ${SPRING_DB_NAME};"
        sudo mysql -e "CREATE USER IF NOT EXISTS '${DB_USER}'@'localhost' IDENTIFIED BY '$(DB_PASS)';"
        sudo mysql -e "GRANT ALL PRIVILEGES ON ${SPRING_DB_NAME}.* TO '${DB_USER}'@'localhost';"
        sudo mysql -e "FLUSH PRIVILEGES;"

  # ✅ Testar conexão
  - task: Bash@3
    displayName: 'Testar conexão com springuser'
    inputs:
      targetType: 'inline'
      script: |
        mysql -u ${DB_USER} -p$(DB_PASS) -e "SHOW DATABASES;"

  # ✅ Build com Maven
  - task: Maven@4
    displayName: 'Build com Maven'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'

  # ✅ Executar aplicação Spring Boot
  - task: Bash@3
    displayName: 'Executar Spring Boot'
    inputs:
      targetType: 'inline'
      script: |
        java -jar target/*.jar
