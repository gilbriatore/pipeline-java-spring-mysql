trigger:
  branches:
    include:
      - repository

pool:
  vmImage: 'ubuntu-latest'

variables:
  MYSQL_ROOT_PASS: '12345'
  SPRING_DB_NAME: 'spring'

steps:
  # Instalar o MySQL
  - task: Bash@3
    displayName: 'Instalar MySQL Server'
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server

  # Extrair senha de debian-sys-maint
  - task: Bash@3
    displayName: 'Extrair senha de debian-sys-maint'
    name: extractDebianPassword
    inputs:
      targetType: 'inline'
      script: |
        PASS=$(sudo grep password /etc/mysql/debian.cnf | head -n1 | awk '{print $3}')
        echo "##vso[task.setvariable variable=DEBIAN_PASS;issecret=true]$PASS"

  # Alterar plugin e senha do root
  - task: Bash@3
    displayName: 'Alterar plugin e senha do root'
    inputs:
      targetType: 'inline'
      script: |
        sudo systemctl start mysql
        echo "Aguardando MySQL iniciar..."
        sleep 5
        
        mysql -u debian-sys-maint -p$(DEBIAN_PASS) -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${MYSQL_ROOT_PASS}';"
        mysql -u debian-sys-maint -p$(DEBIAN_PASS) -e "FLUSH PRIVILEGES;"

  # Criar banco de dados spring
  - task: Bash@3
    displayName: 'Criar banco spring com root'
    inputs:
      targetType: 'inline'
      script: |
        sudo systemctl start mysql
        sleep 5
        
        mysql -u root -p${MYSQL_ROOT_PASS} -e "CREATE DATABASE IF NOT EXISTS ${SPRING_DB_NAME};"

  # Testar conexão com root
  - task: Bash@3
    displayName: 'Testar conexão com root'
    inputs:
      targetType: 'inline'
      script: |
        sudo systemctl start mysql
        sleep 5
        
        mysql -u root -p${MYSQL_ROOT_PASS} -e "SHOW DATABASES;"

  # Executar build com Maven
  - task: Maven@4
    displayName: 'Build com Maven'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean package'

  # Executar aplicação Spring Boot
  - task: Bash@3
    displayName: 'Executar aplicação Spring Boot'
    inputs:
      targetType: 'inline'
      script: |
        java -jar target/*.jar &
        APP_PID=$!
        echo "Aplicação rodando com PID $APP_PID"
        sleep 10
        echo "Finalizando aplicação..."
        kill $APP_PID
